/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import classes.ProjectParticipants;
import database.databaseConnection;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Turgay Ozgun - w1713054
 */
public final class dashboard1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form dashboard1
     */
    private int integer = 10;

    public dashboard1() {
        initComponents();
        piechart();
    }

    public void piechart() {
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        ArrayList<String> listedProjects = new ArrayList<>();//Creating an array list to store all projects found within the databse
        ArrayList<ProjectParticipants> info = new ArrayList<>();
        try {
            listedProjects = databaseConnection.findProjects();// connection between the projects and the databse
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dashboard1.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < listedProjects.size(); i++) {
            try {
                int participants = databaseConnection.findParticipants(listedProjects.get(i));// selects the each of the participants of the project and counts them 
                ProjectParticipants p = new ProjectParticipants(participants, listedProjects.get(i));//
                info.add(p);// add the participants to the array information
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(dashboard1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        Collections.sort(info, (ProjectParticipants o1, ProjectParticipants o2) -> {
            if (o1.getParticipants() > o2.getParticipants()) {
                return -1;
            } else if (o1.getParticipants() == o2.getParticipants()) {
                return 0;
            } else {
                return 1;
            }
        } // sorts the projects in order of who has the most participants
        );

        for (int i = 0; i < integer; i++) {
            pieDataset.setValue(info.get(i).getCountry(), new Integer(info.get(i).getParticipants()));// sets the values for the pie chart (hover over also)
        }

        JFreeChart chart = ChartFactory.createPieChart("Top " + integer + " Projects with w/ the most participants", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        ChartPanel frame = new ChartPanel(chart);

        jPanel1.removeAll();
        jPanel1.add(frame, BorderLayout.CENTER);
        jPanel1.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jPanel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Filter", "Top 5", "Top 10", "Top 15", "Top 20", "Top 25", "Top 30", "Top 35", "Top 40" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel2, 490, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("No Filter")){
            integer = 10;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 5")) {
            integer = 5;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 10")) {
            integer = 10;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 15")) {
            integer = 15;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 20")){
            integer = 20;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 25")) {
            integer = 25;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 30")) {
            integer = 30;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 35")) {
            integer = 35;
            piechart();
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top 40")){
            integer = 40;
            piechart();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
