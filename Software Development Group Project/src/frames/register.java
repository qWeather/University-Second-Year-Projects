/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import static database.databaseConnection.getConnection;
import static database.databaseConnection.register;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Beatrice Antoniu - w1688177
 */
public class register extends javax.swing.JFrame {

    String gender;

    public register() {
        initComponents();
    }

    private static String getEncodedPassword(String password) {
        return Base64.getEncoder().encodeToString(password.getBytes());
    }

    //method to check if the email already exists in the database
    public static boolean checkEmail(String user) throws ClassNotFoundException {
        PreparedStatement ps;
        ResultSet rs;
        boolean checkEmail = false;
        String query = "SELECT * FROM register WHERE email=?";

        try {
            ps = getConnection().prepareStatement(query);
            ps.setString(1, email.getText());

            rs = ps.executeQuery();

            if (rs.next()) {
                checkEmail = true;
            }
            ps.close();
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(register.class.getName()).log(Level.SEVERE, null, ex);
        }
        return checkEmail;
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBtn = new javax.swing.ButtonGroup();
        registerPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        confirmLabel = new javax.swing.JLabel();
        confirm = new javax.swing.JPasswordField();
        firstnameLabel = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        surname = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        roleLabel = new javax.swing.JLabel();
        role = new javax.swing.JComboBox<>();
        register = new javax.swing.JLabel();
        cancel = new javax.swing.JLabel();
        title_panel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerPanel.setBackground(new java.awt.Color(180, 142, 174));
        registerPanel.setFont(new java.awt.Font("Kristen ITC", 1, 13)); // NOI18N
        registerPanel.setPreferredSize(new java.awt.Dimension(900, 500));

        emailLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailLabel.setText("Email");
        emailLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        email.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        email.setNextFocusableComponent(password);
        email.setPreferredSize(new java.awt.Dimension(300, 50));

        passwordLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLabel.setText("Password");
        passwordLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        password.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        password.setNextFocusableComponent(confirm);
        password.setPreferredSize(new java.awt.Dimension(300, 50));

        confirmLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        confirmLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmLabel.setText("Confirm Password");
        confirmLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        confirm.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        confirm.setNextFocusableComponent(firstname);
        confirm.setPreferredSize(new java.awt.Dimension(300, 50));

        firstnameLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        firstnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstnameLabel.setText("First Name");
        firstnameLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        firstname.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        firstname.setNextFocusableComponent(surname);
        firstname.setPreferredSize(new java.awt.Dimension(300, 50));

        surnameLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        surnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        surnameLabel.setText("Surname");
        surnameLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        surname.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        surname.setNextFocusableComponent(email);
        surname.setPreferredSize(new java.awt.Dimension(300, 50));

        genderLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        genderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        genderLabel.setText("Gender");
        genderLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        genderBtn.add(male);
        male.setSelected(true);
        male.setText("Male");
        male.setPreferredSize(new java.awt.Dimension(200, 30));

        genderBtn.add(female);
        female.setText("Female");
        female.setPreferredSize(new java.awt.Dimension(200, 30));

        roleLabel.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        roleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roleLabel.setText("Role");
        roleLabel.setPreferredSize(new java.awt.Dimension(150, 50));

        role.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Employer" }));
        role.setPreferredSize(new java.awt.Dimension(300, 50));

        register.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/login.png"))); // NOI18N
        register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMouseClicked(evt);
            }
        });

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/logout.png"))); // NOI18N
        cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        title_panel.setBackground(new java.awt.Color(201, 197, 203));
        title_panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(215, 217, 215), 2, true));

        title.setBackground(new java.awt.Color(201, 197, 203));
        title.setFont(new java.awt.Font("Kristen ITC", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(100, 110, 104));
        title.setText("Create Account");
        title.setMinimumSize(new java.awt.Dimension(200, 50));
        title.setPreferredSize(new java.awt.Dimension(300, 50));

        javax.swing.GroupLayout title_panelLayout = new javax.swing.GroupLayout(title_panel);
        title_panel.setLayout(title_panelLayout);
        title_panelLayout.setHorizontalGroup(
            title_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(title_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        title_panelLayout.setVerticalGroup(
            title_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(title_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                                .addComponent(cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(register))
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createSequentialGroup()
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(registerPanelLayout.createSequentialGroup()
                                        .addComponent(confirmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(confirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(surnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(firstnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(surname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(male, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(roleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(role, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(title_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                .addComponent(title_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(register, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseClicked
        if (!email.getText().matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$")) { //assures the email contains at least a letter followed by @
            String infoMessage = "Email field is invalid!";
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else if (email.getText().isEmpty()) {
            String infoMessage = "Username field is empty!"; //validation for empty field
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else if (password.getText().equals("")) {
            String infoMessage = "Password field is empty!"; //validation for empty field
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else if (password.getText().length() <= 6) {
            String infoMessage = "Password must be at least 6 characters long!"; //validation for password field if it's under 6 characters long
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);

        } else if (!confirm.getText().equals(password.getText())) {
            String infoMessage = "Passwords don't match"; //validation for if passwords don't match
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else if (firstname.getText().equals("")) {
            String infoMessage = "You must fill your First Name!"; //validation for empty field
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else if (surname.getText().equals("")) {
            String infoMessage = "You must fill your Surname!"; //validation for empty field
            JOptionPane.showMessageDialog(null, infoMessage, "Error: ", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                if (checkEmail(email.getText())) { //checks if email exists
                    JOptionPane.showMessageDialog(null, "Email already exists!");
                } else {

                    String ts = new SimpleDateFormat("dd/MM/yyyy").format(System.currentTimeMillis()); //current date
                    
                    //set the value of the radio button selected
                    if (male.isSelected()) {
                        gender = "Male";
                    }
                    if (female.isSelected()) {
                        gender = "Female";
                    }
                    try {
                        String encryptedPassword = getEncodedPassword(password.getText()); //encoding password
                        register(firstname.getText(), surname.getText(), email.getText(), role.getSelectedItem().toString(), encryptedPassword, gender, ts); //add details to database
                        JOptionPane.showMessageDialog(null, "Submitted to the database!");
                        dispose();
                        new login().setVisible(true); //go back to login page
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(register.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(register.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_registerMouseClicked

    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMouseClicked
        dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_cancelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new register().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancel;
    public static javax.swing.JPasswordField confirm;
    private javax.swing.JLabel confirmLabel;
    public static javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    public static javax.swing.JRadioButton female;
    public static javax.swing.JTextField firstname;
    private javax.swing.JLabel firstnameLabel;
    public static javax.swing.ButtonGroup genderBtn;
    private javax.swing.JLabel genderLabel;
    public static javax.swing.JRadioButton male;
    public static javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel register;
    private javax.swing.JPanel registerPanel;
    public static javax.swing.JComboBox<String> role;
    private javax.swing.JLabel roleLabel;
    public static javax.swing.JTextField surname;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JLabel title;
    private javax.swing.JPanel title_panel;
    // End of variables declaration//GEN-END:variables
}
